---
---
body {
  display: flex;
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  position: absolute;
}

li {
    list-style: none;
}

header {
    .header-top {
        height: 80px;
        line-height: 80px;
        text-align: center;
        background: black;
        color: white;
        border-radius: 0 0 2rem;
        font-size: 1.5em;
    }

    > nav {
        > .section-nav {
            margin-top: 0;
            padding-left: 0;

            *:not(li) {
                background-color: rgba(0, 0, 0, 0.05);
                border-radius: 0.5rem;
            }

            a:link,
            a:visited,
            a:active {
                color: inherit;
                text-decoration: none;
                display: block;
                padding: 0.1rem 0.5rem;
                border-radius: 0.5rem;
                margin: 0.5rem;
            }

            > li {
                margin: 0.5rem 0.5rem 3rem;
                padding: 0.5rem;
                border-radius: 0.5rem;
                background-color: rgba(0, 0, 0, 0.05);

                & a:hover {
                    background-color: rgba(0,0,0,0.20);
                }

                ul {
                    padding-left: 0.4rem;
                }
            }
        }
    }
}

.unfolder { display: none; }

.toggle-label {
  cursor: pointer;
  background-color: black;
}

.unfolder:checked ~ .toggle-label {
  background-color: white;
}

#article > div {
  border: 1px solid black;
  padding: 10px;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-around;
  margin-bottom: 2rem;
}

#article > div > div {
  border: 1px solid black;
  padding: 10px;
  min-width: 24em;
  margin: 10px;
  flex: 1 33%;
}

#tech > div[class^="tech-"],
#maps > div[class^="maps-"] { 
  flex-basis: 100%;
}

#tech > div[class^="tech-"] > h2 ,
#maps > div[class^="maps-"] > h2 {
  text-align: center;
}

#tech > div[class^="tech-"] > h2 ~ div {
  max-width: 80rem;
  margin: 0 auto;
}

.maps-grouped > .map {
  border: 1px dotted black;
}

.maps-grouped > .map > h3 {
  margin: 2rem;
}

.tech-header h3 {
  display: inline-block;
  margin: 0 0.5em 1.5em;
  font-size: 150%;
}

.tech-header .tags {
  float: right;
  color: #BBB;
  font-size: 80%;
}

.tech-header .tags .tagprefix {
  font-weight: bold;
}

#enemies .enemy {
  margin: 1rem;
  padding: 1rem;
  border: 1px solid black;
}

.stats {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.stats .stat {
  padding: 0.25rem 1rem;
  background-color: rgba(0,0,0,0.05);
  margin: 0.25rem;
  border-radius: 1rem;
  display: flex;
}
{% assign map_stat_defaults = site.data.stock-maps | first %}
{% for stat in map_stat_defaults %}
    {% assign map_stat_list = map_stat_list | append: " " | append: stat[0] %}
{% endfor %}
$map-stat-list: {{ map_stat_list }};

@mixin textcontent($statname, $content) {
    &.stat-#{$statname}::before {
        background-image: unset;
        content: '#{$content}';
    }
}

.map-stats {
    @each $stat in $map-stat-list {
        .stat-#{$stat} {
            &::before {
                background-image: url("img/icon/stat/map/#{$stat}.png");
            }
        }
    }
    @for $i from 1 through 20 {
        .stat-tiles_layer#{$i}::before {
            content: "#{$i}";
        }
    }
    [class*='stat-tiles_']::before {
        background-image: url("img/icon/stat/map/tiles_layer.png");
        line-height: 3em;
        text-align: right;
        color: white;
        font-size: inherit;
    }
    .map-stat {
        @include textcontent(name, "ðŸ“›"); 
        @include textcontent(srcfile, 'ðŸ–¼');

        span {
            margin-left: 0.5em;
        }
    }
}


.map-stat::before {
  content: '';
  #background-color: red;
  width: 32px;
  height: 32px;
  display: inline-block;
  font-size: 32px;
}

.map-stat {
    line-height: 32px;
}
.map-stats 
.stat.stat-attrib-true span,
.stat.stat-attrib-false span {
    display: none;
}
.stat::after {
    font-size: 32px;
}

.stat.stat-attrib-true::after {
    content: 'âœ“';
    color: green;
}

.stat.stat-attrib-false::after {
    content: 'âœ—';
    color: red;
}


#enemies .enemy .enemy-stats .enemy-stat a {
  text-transform: capitalize;
}

body header,
body article {
  overflow: auto;
  height: 100vh;
}

body header {
  scrollbar-width: none;
  flex-basis: 20%;
  min-width: 11em;
  max-width: 18em;
}

body article {
  padding: 0 1rem;
  flex: 1 80%;
}

.uncertain-value {
  color: red;
}
